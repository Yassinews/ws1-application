services:
  chirpstack:
    image: chirpstack/chirpstack:4
    command: -c /etc/chirpstack
    restart: unless-stopped
    volumes:
      - ./configuration/chirpstack:/etc/chirpstack
    depends_on:
      - postgres
      - mosquitto
      - redis
    environment:
      - MQTT_BROKER_HOST=mosquitto
      - REDIS_HOST=redis
      - POSTGRESQL_HOST=postgres
    ports:
      - "8080:8080"
    networks:
      - chirpstack_network
  chirpstack-gateway-bridge:
    image: chirpstack/chirpstack-gateway-bridge:4
    restart: unless-stopped
    ports:
      - "1700:1700/udp"
    volumes:
      - ./configuration/chirpstack-gateway-bridge:/etc/chirpstack-gateway-bridge
    environment:
      - INTEGRATION__MQTT__EVENT_TOPIC_TEMPLATE=eu868/gateway/{{ .GatewayID }}/event/{{ .EventType }}
      - INTEGRATION__MQTT__STATE_TOPIC_TEMPLATE=eu868/gateway/{{ .GatewayID }}/state/{{ .StateType }}
      - INTEGRATION__MQTT__COMMAND_TOPIC_TEMPLATE=eu868/gateway/{{ .GatewayID }}/command/#
    depends_on:
      - mosquitto
    networks:
      - chirpstack_network
  chirpstack-gateway-bridge-basicstation:
    image: chirpstack/chirpstack-gateway-bridge:4
    restart: unless-stopped
    command: -c /etc/chirpstack-gateway-bridge/chirpstack-gateway-bridge-basicstation-eu868.toml
    ports:
      - "3001:3001"
    volumes:
      - ./configuration/chirpstack-gateway-bridge:/etc/chirpstack-gateway-bridge
    depends_on:
      - mosquitto
    networks:
      - chirpstack_network
  chirpstack-rest-api:
    image: chirpstack/chirpstack-rest-api:4
    restart: unless-stopped
    command: --server chirpstack:8080 --bind 0.0.0.0:8090 --insecure
    ports:
      - "8090:8090"
    depends_on:
      - chirpstack
    networks:
      - chirpstack_network

  postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - ./configuration/postgresql/initdb:/docker-entrypoint-initdb.d
      - postgresqldata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=chirpstack
      - POSTGRES_PASSWORD=chirpstack
      - POSTGRES_DB=chirpstack
    networks:
      - chirpstack_network  # La même réseau pour faciliter la communication
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --save 300 1 --save 60 100 --appendonly no
    volumes:
      - redisdata:/data
    networks:
      - chirpstack_network  # La même réseau pour faciliter la communication
  mosquitto:
    image: eclipse-mosquitto:2
    restart: unless-stopped
    ports:
      - "1883:1883"
    volumes: 
      - ./configuration/mosquitto/config/:/mosquitto/config/
    networks:
      - chirpstack_network  # La même réseau pour faciliter la communication
  django:
    container_name: django_app
    build:
      context: ./WS_1  # Remplace par le chemin du dossier de ton projet Django
    volumes:
      - ./WS_1:/WS_1  # Montre ton projet local dans le container Docker
      - ./staticfiles:/WS_1/staticfiles
    ports:
      - "8000:8000"  # Mappe le port 8000 du container à celui du VPS
    environment:
      - DEBUG=True  # (à changer pour False en production)
    depends_on:
      - chirpstack  # Attendre que ChirpStack soit lancé
    networks:
      - chirpstack_network  # La même réseau pour faciliter la communication
  nginx:
    image: nginx:latest
    ports:
      - "81:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./WS_1/staticfiles:/staticfiles
    depends_on:
      - django
    networks:
      - webnet
      - chirpstack_network  # La même réseau pour faciliter la communication
networks:
  chirpstack_network:
    driver: bridge  # Définit le réseau bridge pour permettre aux services de communiquer
  webnet:
    driver: bridge
volumes:
  postgresqldata:
  redisdata:
